{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\Table Component\\\\dynamic-table\\\\src\\\\Components\\\\Cell.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemStyle = {\n  padding: \"0px\",\n  position: \"relative\",\n  height: \"26px\",\n  display: \"flex\",\n  alignItems: \"center\"\n};\nconst textStyle = { ...itemStyle,\n  padding: \"0px 4px\",\n  height: \"26px\",\n  fontFamily: \"Arial\",\n  fontSize: \"13px\"\n};\nconst inputStyle = {\n  padding: \"0\",\n  position: \"absolute\",\n  left: \"2px\",\n  top: \"2px\",\n  right: \"45px\",\n  bottom: \"2px\",\n  minWidth: \"20px\",\n  fontFamily: \"Arial\",\n  fontSize: \"13px\"\n};\nconst buttonStyle = {\n  position: \"absolute\",\n  top: \"2px\",\n  right: \"2px\",\n  bottom: \"2px\",\n  width: \"40px\"\n};\n\nconst Cell = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    value,\n    mode,\n    onChange\n  } = _ref;\n  const [localMode, setLocalMode] = React.useState(mode !== null && mode !== void 0 ? mode : \"read\");\n  const [localValue, setLocalValue] = React.useState(value !== null && value !== void 0 ? value : \"\");\n  React.useEffect(() => setLocalMode(mode !== null && mode !== void 0 ? mode : \"read\"), [mode]);\n  React.useEffect(() => setLocalValue(value !== null && value !== void 0 ? value : \"\"), [value]);\n\n  if (localMode === \"edit\") {\n    const handleInputChange = e => setLocalValue(e.target.value);\n\n    const handleSaveClick = () => {\n      setLocalMode(\"read\");\n      onChange === null || onChange === void 0 ? void 0 : onChange(localValue);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: itemStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: localValue,\n        style: inputStyle,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleSaveClick,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (localMode === \"read\") {\n    const handleEditClick = () => {\n      setLocalMode(\"edit\");\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: textStyle,\n      onClick: handleEditClick,\n      children: localValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}, \"1HPn21S5+fm8qMj8nOj9hg1WygU=\")), \"1HPn21S5+fm8qMj8nOj9hg1WygU=\");\n\n_c2 = Cell;\nexport default Cell;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell$React.memo\");\n$RefreshReg$(_c2, \"Cell\");","map":{"version":3,"names":["React","itemStyle","padding","position","height","display","alignItems","textStyle","fontFamily","fontSize","inputStyle","left","top","right","bottom","minWidth","buttonStyle","width","Cell","memo","value","mode","onChange","localMode","setLocalMode","useState","localValue","setLocalValue","useEffect","handleInputChange","e","target","handleSaveClick","handleEditClick"],"sources":["E:/Workspace/Table Component/dynamic-table/src/Components/Cell.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst itemStyle = {\r\n  padding: \"0px\",\r\n  position: \"relative\",\r\n  height: \"26px\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst textStyle = {\r\n  ...itemStyle,\r\n  padding: \"0px 4px\",\r\n  height: \"26px\",\r\n  fontFamily: \"Arial\",\r\n  fontSize: \"13px\",\r\n};\r\n\r\nconst inputStyle = {\r\n  padding: \"0\",\r\n  position: \"absolute\",\r\n  left: \"2px\",\r\n  top: \"2px\",\r\n  right: \"45px\",\r\n  bottom: \"2px\",\r\n  minWidth: \"20px\",\r\n  fontFamily: \"Arial\",\r\n  fontSize: \"13px\",\r\n};\r\n\r\nconst buttonStyle = {\r\n  position: \"absolute\",\r\n  top: \"2px\",\r\n  right: \"2px\",\r\n  bottom: \"2px\",\r\n  width: \"40px\",\r\n};\r\n\r\nconst Cell = React.memo(({ value, mode, onChange }) => {\r\n  const [localMode, setLocalMode] = React.useState(mode ?? \"read\");\r\n  const [localValue, setLocalValue] = React.useState(value ?? \"\");\r\n  React.useEffect(() => setLocalMode(mode ?? \"read\"), [mode]);\r\n  React.useEffect(() => setLocalValue(value ?? \"\"), [value]);\r\n\r\n  if (localMode === \"edit\") {\r\n    const handleInputChange = (e) => setLocalValue(e.target.value);\r\n    const handleSaveClick = () => {\r\n      setLocalMode(\"read\");\r\n      onChange?.(localValue);\r\n    };\r\n\r\n    return (\r\n      <div style={itemStyle}>\r\n        <input\r\n          type=\"text\"\r\n          value={localValue}\r\n          style={inputStyle}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button style={buttonStyle} onClick={handleSaveClick}>\r\n          Ok\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localMode === \"read\") {\r\n    const handleEditClick = () => {\r\n      setLocalMode(\"edit\");\r\n    };\r\n    return (\r\n      <div style={textStyle} onClick={handleEditClick}>\r\n        {localValue}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n});\r\n\r\nexport default Cell;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG;EAChBC,OAAO,EAAE,KADO;EAEhBC,QAAQ,EAAE,UAFM;EAGhBC,MAAM,EAAE,MAHQ;EAIhBC,OAAO,EAAE,MAJO;EAKhBC,UAAU,EAAE;AALI,CAAlB;AAQA,MAAMC,SAAS,GAAG,EAChB,GAAGN,SADa;EAEhBC,OAAO,EAAE,SAFO;EAGhBE,MAAM,EAAE,MAHQ;EAIhBI,UAAU,EAAE,OAJI;EAKhBC,QAAQ,EAAE;AALM,CAAlB;AAQA,MAAMC,UAAU,GAAG;EACjBR,OAAO,EAAE,GADQ;EAEjBC,QAAQ,EAAE,UAFO;EAGjBQ,IAAI,EAAE,KAHW;EAIjBC,GAAG,EAAE,KAJY;EAKjBC,KAAK,EAAE,MALU;EAMjBC,MAAM,EAAE,KANS;EAOjBC,QAAQ,EAAE,MAPO;EAQjBP,UAAU,EAAE,OARK;EASjBC,QAAQ,EAAE;AATO,CAAnB;AAYA,MAAMO,WAAW,GAAG;EAClBb,QAAQ,EAAE,UADQ;EAElBS,GAAG,EAAE,KAFa;EAGlBC,KAAK,EAAE,KAHW;EAIlBC,MAAM,EAAE,KAJU;EAKlBG,KAAK,EAAE;AALW,CAApB;;AAQA,MAAMC,IAAI,iCAAGlB,KAAK,CAACmB,IAAN,SAAW,QAA+B;EAAA;;EAAA,IAA9B;IAAEC,KAAF;IAASC,IAAT;IAAeC;EAAf,CAA8B;EACrD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,KAAK,CAACyB,QAAN,CAAeJ,IAAf,aAAeA,IAAf,cAAeA,IAAf,GAAuB,MAAvB,CAAlC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8B3B,KAAK,CAACyB,QAAN,CAAeL,KAAf,aAAeA,KAAf,cAAeA,KAAf,GAAwB,EAAxB,CAApC;EACApB,KAAK,CAAC4B,SAAN,CAAgB,MAAMJ,YAAY,CAACH,IAAD,aAACA,IAAD,cAACA,IAAD,GAAS,MAAT,CAAlC,EAAoD,CAACA,IAAD,CAApD;EACArB,KAAK,CAAC4B,SAAN,CAAgB,MAAMD,aAAa,CAACP,KAAD,aAACA,KAAD,cAACA,KAAD,GAAU,EAAV,CAAnC,EAAkD,CAACA,KAAD,CAAlD;;EAEA,IAAIG,SAAS,KAAK,MAAlB,EAA0B;IACxB,MAAMM,iBAAiB,GAAIC,CAAD,IAAOH,aAAa,CAACG,CAAC,CAACC,MAAF,CAASX,KAAV,CAA9C;;IACA,MAAMY,eAAe,GAAG,MAAM;MAC5BR,YAAY,CAAC,MAAD,CAAZ;MACAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGI,UAAH,CAAR;IACD,CAHD;;IAKA,oBACE;MAAK,KAAK,EAAEzB,SAAZ;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAEyB,UAFT;QAGE,KAAK,EAAEhB,UAHT;QAIE,QAAQ,EAAEmB;MAJZ;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAQ,KAAK,EAAEb,WAAf;QAA4B,OAAO,EAAEgB,eAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;EAED,IAAIT,SAAS,KAAK,MAAlB,EAA0B;IACxB,MAAMU,eAAe,GAAG,MAAM;MAC5BT,YAAY,CAAC,MAAD,CAAZ;IACD,CAFD;;IAGA,oBACE;MAAK,KAAK,EAAEjB,SAAZ;MAAuB,OAAO,EAAE0B,eAAhC;MAAA,UACGP;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,OAAO,IAAP;AACD,CAvCY,kCAAH,iCAAV;;MAAMR,I;AAyCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}